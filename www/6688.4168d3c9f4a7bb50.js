"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6688],{1328:(c,v,o)=>{o.r(v),o.d(v,{LoginPageModule:()=>p});var u=o(655),a=o(2096),w=o(9808),h=o(5649),t=o(4182),P=o(6752),E=o(9872),L=o(1301),l=o(6847),y=o(1228),b=o(9010),z=o(9265),g=o(7091);let i=class{constructor(e,n,r,s,S,x,F){this.authService=e,this.cryptoService=n,this.utils=r,this.router=s,this.fb=S,this.alertController=x,this.toastController=F,this.nav=L.k}ngOnInit(){this.initForm()}initForm(){this.formLogin=this.fb.group({userEmail:this.fb.control("",[t.kI.required]),userPassword:this.fb.control("",[t.kI.required,t.kI.minLength(4)])})}authUser(){this.showLoader=!0;const e={email:this.formLogin.value.userEmail,password:this.formLogin.value.userPassword},n={data:this.cryptoService.encondeJwt(e)},r=this.authService.authUser(n).subscribe(s=>{r.closed||r.unsubscribe(),this.showLoader=!1,this.formLogin.reset(),this.utils.localStorageSetItem("userSession",this.cryptoService.encondeJwt(s.authorized)),this.utils.returnLoggedUser(),this.router.navigate([`/${this.nav.garage.route}`])},s=>{this.showErrorToast(s)})}forgotPassword(){console.log("esqueceu")}showErrorAlert(e){console.error(e);const n={header:"Ops...",message:404===e.status?l.Hi:l.tJ,buttons:[{text:"Ok",role:"cancel",id:"cancel-button"}]};this.showLoader=!1,this.alertController.create(n).then(r=>{r.present()})}showErrorToast(e){let n;switch(e.status){case 404:n=l.Dl;break;case 401:n=l.WY;break;default:n=l.tJ}this.showLoader=!1,console.error(e),this.toastController.create({header:"Aten\xe7\xe3o!",message:n,duration:4e3,position:"middle",icon:"warning-outline",color:"danger"}).then(r=>{r.present()})}};i.ctorParameters=()=>[{type:y.e},{type:b.$},{type:z.F},{type:g.F0},{type:t.qu},{type:h.Br},{type:h.yF}],i.propDecorators={content:[{type:a.i9L,args:["IonContent"]}]},i=(0,u.gn)([(0,a.wA2)({selector:"app-login",template:P,styles:[E]})],i);var I=o(3529);let d=class{constructor(e,n,r,s){this.authService=e,this.cryptoService=n,this.utils=r,this.router=s,this.nav=L.k}canActivate(e,n){return!this.utils.sessionUser||(this.router.navigate([`/${this.nav.garage.route}`]),!1)}};d.ctorParameters=()=>[{type:y.e},{type:b.$},{type:z.F},{type:g.F0}],d=(0,u.gn)([(0,a.GSi)({providedIn:"root"})],d);const C=[{path:"",component:i,canActivate:[d]}];let m=class{};m=(0,u.gn)([(0,a.LVF)({imports:[g.Bz.forChild(C)],exports:[g.Bz]})],m);let p=class{};p=(0,u.gn)([(0,a.LVF)({imports:[I.m,w.ez,t.u5,t.UX,h.Pc,m],providers:[t.qu],declarations:[i]})],p)},9872:c=>{c.exports=".grid-content {\n  align-items: baseline;\n}"},6752:c=>{c.exports='<ion-content #IonContent [fullscreen]="true" [scrollEvents]="true">\r\n  <app-loader [showLoader]="showLoader"></app-loader>\r\n\r\n  <div class="main-container">\r\n    <ion-title size="large" color="primary" class="main-title">\r\n      <ion-icon [name]="nav.login.icon + \'-outline\'" color="secondary"></ion-icon>\r\n      <ion-label>{{nav.login.title}}</ion-label>\r\n    </ion-title>\r\n\r\n    <div class="main-body">\r\n      <ion-grid slot="content">\r\n        <ion-row>\r\n          <ion-col>\r\n            <h1>Entrar</h1>\r\n          </ion-col>\r\n        </ion-row>\r\n\r\n        <form name="login" [formGroup]="formLogin" (submit)="authUser()">\r\n          <ion-row class="grid-content">\r\n            <ion-col size-md="6" size-sm="12" size-xs="12">\r\n              <ion-item>\r\n                <ion-label position="floating">Email</ion-label>\r\n                <ion-input type="email" pattern=".+@.+\\..+" maxlength="50" formControlName="userEmail"></ion-input>\r\n              </ion-item>\r\n              <ion-note color="danger" *ngIf="formLogin.controls.userEmail.touched">\r\n                <span *ngIf="formLogin.controls.userEmail.errors?.required">Necess\xe1rio preencher seu email!</span>\r\n                <span *ngIf="formLogin.controls.userEmail.errors?.pattern">Necess\xe1rio preencher seu email corretamente!</span>\r\n              </ion-note>\r\n            </ion-col>\r\n            <ion-col size-md="6" size-sm="12" size-xs="12">\r\n              <ion-item>\r\n                <ion-label position="floating">Senha</ion-label>\r\n                <ion-input type="password" maxlength="80" formControlName="userPassword"></ion-input>\r\n              </ion-item>\r\n              <ion-note color="danger" *ngIf="formLogin.controls.userPassword.touched">\r\n                <span *ngIf="formLogin.controls.userPassword.errors?.required">Necess\xe1rio preencher sua senha!</span>\r\n              </ion-note>\r\n            </ion-col>\r\n          </ion-row>\r\n\r\n          <ion-row class="grid-content">\r\n            <ion-col size-md="3" size-sm="6" size-xs="12">\r\n              <ion-button size="default" title="Entrar" expand="block" color="success" type="submit" [disabled]="formLogin.status === \'INVALID\'">\r\n                <ion-icon name="enter-outline" slot="start"></ion-icon>\r\n                <ion-label slot="end">Entrar</ion-label>\r\n              </ion-button>\r\n            </ion-col>\r\n\r\n            <ion-col size-md="3" size-sm="6" size-xs="12">\r\n              <ion-button size="default" title="Esqueci a senha" expand="block" color="medium" type="button" (click)="forgotPassword()">\r\n                <ion-icon name="skull-outline" slot="start"></ion-icon>\r\n                <ion-label slot="end">Esqueci a senha</ion-label>\r\n              </ion-button>\r\n            </ion-col>\r\n          </ion-row>\r\n        </form>\r\n      </ion-grid>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n'}}]);